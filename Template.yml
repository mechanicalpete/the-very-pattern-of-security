AWSTemplateFormatVersion: 2010-09-09

Parameters:
  ParamBaseName:
    Type: String
    Description: The base name used to name things like IAM Users, Roles, etc
    AllowedPattern: '[A-Z][a-zA-Z0-9]{3,31}'
  ParamRoleSessionName:
    Type: String
    Description: The Session Name that must be passed when attempting to assume the IAM Role
  ParamExternalId:
    Type: String
    Description: The ExternalId that must be passed when attempting to assume the IAM Role
    MinLength: 2
    MaxLength: 1224
    AllowedPattern: '[a-zA-Z0-9\+=,\.@:/]{2,1224}'
  ParamMaxSessionDuration:
    Type: Number
    Description: A number, in seconds, between 1 hour and 12 hours.
    Default: 3600
    MinValue: 3600
    MaxValue: 43200

Resources:

  User:
    Type: AWS::IAM::User
    Properties:
      UserName: !Ref ParamBaseName

  UserCredentials:
    Type: AWS::IAM::AccessKey
    Properties:
      Serial: 1
      Status: Active # Active | Inactive
      UserName: !Ref User

  UserPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: 'ExplicitlyDenyAllActionsExceptAssumeRole'
            Effect: Deny
            NotAction: ['sts:AssumeRole']
            Resource: '*'
          - Sid: 'ExplicitlyAllowAssumeRole'
            Effect: Allow
            Action: ['sts:AssumeRole']
            Resource: !GetAtt Role.Arn
            # Condition:
            #   StringLike:
            #     'sts:RoleSessionName':
            #       !Ref ParamRoleSessionName
            #     'sts:ExternalId':
            #       !Ref ParamExternalId
      PolicyName: !Sub '${ParamBaseName}UserPolicy'
      Users:
        - !Ref User

  Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !GetAtt User.Arn
            Action:
              - 'sts:AssumeRole'
            Condition:
              StringLike:
                'sts:RoleSessionName':
                  !Ref ParamRoleSessionName
                'sts:ExternalId':
                  !Ref ParamExternalId
      MaxSessionDuration: !Ref ParamMaxSessionDuration
      PermissionsBoundary: !Ref PermissionBoundary
      RoleName: !Sub '${ParamBaseName}Role'

  PermissionBoundary:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub '${ParamBaseName}PermissionBoundaryPolicy'
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Deny
            NotAction: 's3:*'
            Resource: '*'
          - Effect: Allow
            Action:
              - 's3:*'
            Resource: '*'

  RolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Deny
            NotAction: 's3:*Bucket*'
            Resource: '*'
          - Effect: Allow
            Action:
              - 's3:List*Bucket*'
              - 's3:Get*Bucket*'
              - 's3:Describe*Bucket*'
              - 'iam:ListRoles'
            Resource: '*'
      PolicyName: !Sub '${ParamBaseName}RolePolicy'
      Roles:
        - !Ref Role

Outputs:
  UserName:
    Value: !Ref User
  UserArn:
    Value: !GetAtt User.Arn
  UserCredentialsAccessKey:
    Value: !Ref UserCredentials
  UserCredentialsSecretAccessKey:
    Value: !GetAtt UserCredentials.SecretAccessKey
  UserPolicyName:
    Value: !Ref UserPolicy
  RoleName:
    Value: !Ref Role
  RoleArn:
    Value: !GetAtt Role.Arn
  RoleRoleId:
    Value: !GetAtt Role.RoleId
  RolePolicyName:
    Value: !Ref RolePolicy
  PermissionBoundaryArn:
    Value: !Ref PermissionBoundary
